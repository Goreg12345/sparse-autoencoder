from typing import Any, Union, Optional, Callable, IO, Iterable, List

import wandb
from transformer_lens import HookedTransformer
from typing_extensions import Self
import pandas as pd

import pytorch_lightning as pl
import torch
from lightning_fabric.utilities.types import _PATH, _MAP_LOCATION_TYPE
from pytorch_lightning.core.optimizer import LightningOptimizer
from torch import nn, Tensor
from torch.optim import Optimizer

from DeadFeatureResampler import DeadFeatureResampler
from HookedSparseAutoencoder import HookedSparseAutoencoder
from metrics.L0Loss import L0Loss
from metrics.dead_neurons import DeadNeurons
from metrics.reconstruction_loss import ReconstructionLoss
from metrics.ultra_low_density_neurons import UltraLowDensityNeurons


class SparseAutoencoder(pl.LightningModule):

    def __init__(self, sae: HookedSparseAutoencoder, resampling_steps: List, n_resampling_watch_steps,
                 l1_coefficient: float = 6e-3, reconstruction_loss_metric_zero=None,
                    reconstruction_loss_metric_mean=None,
                 dead_features_resampler: DeadFeatureResampler = None, lr=1e-3,
                 l1_scheduler: Callable = None, lr_warmup_steps = None, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.sae = sae
        self.l1_coefficient = l1_coefficient
        self.reconstruction_loss_metric_zero = reconstruction_loss_metric_zero
        self.reconstruction_loss_metric_mean = reconstruction_loss_metric_mean
        self.dead_neurons_metric = DeadNeurons(sae.d_hidden)
        self.l0_loss = L0Loss()
        self.low_freq_metric = UltraLowDensityNeurons(sae.d_hidden)
        self.frequency_hist = UltraLowDensityNeurons(sae.d_hidden)
        self.lr = lr
        self.l1_scheduler = l1_scheduler

        # this one will be used to track dead neurons for the neuron resampling method
        self.resampling_steps = resampling_steps
        self.n_resampling_watch_steps = n_resampling_watch_steps
        self.dead_features_resampler = dead_features_resampler

        # learning rate warmup
        if lr_warmup_steps is not None:
            self.lr_warmup_steps = lr_warmup_steps

    def forward(self, X):
        return self.sae(X)

    def criterion(self, X_hat, X, feature_activations):
        mse = nn.functional.mse_loss(X_hat, X, reduction='mean')
        l1 = self.l1_coefficient * (feature_activations.abs()**1).sum(dim=1).mean()
        return mse + l1, mse, l1

    def training_step(self, batch, batch_idx):
        X = batch
        if batch_idx == 0:
            self.sae.init_geometric_median(X)
        X_hat, feature_activations = self(X)
        loss, mse, l1 = self.criterion(X_hat, X, feature_activations)
        self.log("train_loss", loss, prog_bar=True, logger=True)
        self.log("train_mse", mse, prog_bar=True, logger=True)
        self.log("train_l1", l1, prog_bar=True, logger=True)
        self.dead_neurons_metric.update(feature_activations)
        if batch_idx % 2000 == 0:
            self.log("dead_neurons", self.dead_neurons_metric.compute())
            self.dead_neurons_metric.reset()

        if batch_idx > 1000:  # wait until the model has been trained for a bit
            self.low_freq_metric.update(feature_activations)
            self.frequency_hist.update(feature_activations)
            if batch_idx % 2000 == 0:
                self.log("low_freq_neurons", self.low_freq_metric.compute())
                self.low_freq_metric.reset()
                self.logger.experiment.log({"frequency_hist": self.frequency_hist.compute(return_wandb_bar=True)})
                self.frequency_hist.reset()

        if self.dead_features_resampler:
            # if batch_idx between any of resampling steps - 1000 and resampling steps
            if any([batch_idx in range(step - self.n_resampling_watch_steps, step) for step in self.resampling_steps]):
                self.dead_features_resampler.update(feature_activations)
            if batch_idx in self.resampling_steps:
                w = self.dead_features_resampler.compute(*self.sae.get_weights(), self.trainer.optimizers[0])
                self.dead_features_resampler.reset()
                self.sae.set_weights(*w)

        if self.l1_scheduler:
            self.l1_coefficient = self.l1_scheduler(batch_idx)

        return loss.float()

    def validation_step(self, batch, batch_idx):
        X = batch
        X_hat, feature_activations = self(X)
        loss, mse, l1 = self.criterion(X_hat, X, feature_activations)
        self.log("val_loss", loss, prog_bar=True, logger=True)
        self.log("val_mse", mse, prog_bar=True, logger=True)
        self.log("val_l1", l1, prog_bar=True, logger=True)
        if self.reconstruction_loss_metric_zero:
            self.reconstruction_loss_metric_zero.update()
        if self.reconstruction_loss_metric_mean:
            self.reconstruction_loss_metric_mean.update()
        self.l0_loss.update(feature_activations)

        # X_hat, feature_activations = self(self.get_sample_batch())
        # wandb.Table(dataframe=pd.DataFrame({'sample_recons': X_hat[0].detach().cpu().numpy()}))
        # wandb.Table(dataframe=pd.DataFrame({'sample_activations': feature_activations[0].detach().cpu().numpy()}))
        return loss

    def on_validation_epoch_end(self) -> None:
        if self.reconstruction_loss_metric_zero:
            self.log("val_reconstruction_loss_zero", self.reconstruction_loss_metric_zero.compute(), logger=True)
            self.reconstruction_loss_metric_zero.reset()
        if self.reconstruction_loss_metric_mean:
            self.log("val_reconstruction_loss_mean", self.reconstruction_loss_metric_mean.compute(), logger=True)
            self.reconstruction_loss_metric_mean.reset()
        self.log("val_l0_loss", self.l0_loss.compute(), logger=True)
        self.l0_loss.reset()

    def on_test_epoch_end(self) -> None:
        self.on_validation_epoch_end()
        # if self.reconstruction_loss_metric:
        #     self.log("test_reconstruction_loss", self.reconstruction_loss_metric.compute(), logger=True)
        #     self.reconstruction_loss_metric.reset()

    def test_step(self, batch, batch_idx):
        return self.validation_step(batch, batch_idx)
        X = batch
        X_hat, feature_activations = self(X)
        loss, mse, l1 = self.criterion(X_hat, X, feature_activations)
        self.log("test_loss", loss, prog_bar=True, logger=True)
        self.log("test_mse", mse, prog_bar=True, logger=True)
        self.log("test_l1", l1, prog_bar=True, logger=True)
        if self.reconstruction_loss_metric:
            self.reconstruction_loss_metric.update()
        return loss

    def configure_optimizers(self):
        if hasattr(self, 'lr_warmup_steps'):
            def get_lr_multiplier(step):
                if step < self.lr_warmup_steps:
                    return step / self.lr_warmup_steps
                elif any([step >= resampling_step and step < resampling_step + self.lr_warmup_steps
                          for resampling_step in self.resampling_steps]):
                    return ((step % self.lr_warmup_steps) / self.lr_warmup_steps)
                return 1.
            optimizer = torch.optim.Adam(self.parameters(), lr=self.lr)
            scheduler = {
                'scheduler': torch.optim.lr_scheduler.LambdaLR(optimizer, get_lr_multiplier),
                'interval': 'step',
            }
            return [optimizer], [scheduler]
        optimizer = torch.optim.Adam(self.parameters(), lr=self.lr)
        return optimizer

    def backward(self, loss: Tensor, *args: Any, **kwargs: Any) -> None:
        loss.backward(*args, **kwargs)
        self.sae.make_decoder_weights_and_grad_unit_norm()

    def optimizer_step(
        self,
        epoch: int,
        batch_idx: int,
        optimizer: Union[Optimizer, LightningOptimizer],
        optimizer_closure: Optional[Callable[[], Any]] = None,
    ) -> None:
        super().optimizer_step(epoch, batch_idx, optimizer, optimizer_closure)
        self.sae.make_decoder_weights_unit_norm()

    def on_save_checkpoint(self, checkpoint):
        if 'reconstruction_loss_metric' in checkpoint:
            del checkpoint['reconstruction_loss_metric']
        return checkpoint

    @classmethod
    def load_from_checkpoint(
        cls,
        checkpoint_path: Union[_PATH, IO],
        llm: HookedTransformer,
        text_dataset: Iterable,
        map_location: _MAP_LOCATION_TYPE = None,
        hparams_file: Optional[_PATH] = None,
        strict: bool = True,
        **kwargs: Any,
    ) -> Self:
        sae = HookedSparseAutoencoder(768, 8*768)
        checkpoint = torch.load(checkpoint_path, map_location=map_location)
        state_dict = checkpoint['state_dict']
        # filter for sae.
        state_dict = {k: v for k, v in state_dict.items() if k.startswith('sae')}
        # remove sae. prefix
        state_dict = {k[4:]: v for k, v in state_dict.items()}
        sae.load_state_dict(state_dict)

        # TODO: this is a hack to get the reconstruction loss metric to load
        reconstruction_loss_metric_zero = ReconstructionLoss(llm, sae, text_dataset, None)
        dead_features_resampler = DeadFeatureResampler(sae, None, 200000, 768, 8*768)
        model = super().load_from_checkpoint(checkpoint_path, map_location, hparams_file, strict, sae=sae,
                                             reconstruction_loss_metric=reconstruction_loss_metric,
                                             dead_features_resampler=dead_features_resampler, **kwargs)
        return model

    @classmethod
    def load_theirs(cls, version, llm, text_dataset, cfg, resampler, linear_growth_scheduler):
        from transformer_lens import utils
        from collections import OrderedDict

        if version == "run1":
            version = 25
        elif version == "run2":
            version = 47

        # cfg = utils.download_file_from_hf("ckkissane/tinystories-1M-SAES", f"{version}_cfg.json")

        state_dict = utils.download_file_from_hf("ckkissane/tinystories-1M-SAES", f"{version}.pt", force_is_torch=True)
        state_dict = OrderedDict({
            'tied_bias': state_dict['b_dec'],
            'encoder_map.weight': state_dict['W_enc'].T,
            'encoder_map.bias': state_dict['b_enc'],
            'decoder_map.weight': state_dict['W_dec'].T,
        })

        sae = HookedSparseAutoencoder(512, 32 * 512)
        sae.load_state_dict(state_dict)

        # TODO: this is a hack to get the reconstruction loss metric to load
        reconstruction_loss_metric_zero = ReconstructionLoss(llm, sae, text_dataset,  cfg['actv_name'],
                                                    cfg['head'], ablation_type='zero')
        reconstruction_loss_metric_mean = ReconstructionLoss(llm, sae, text_dataset, cfg['actv_name'],
                                                    cfg['head'], ablation_type='mean')
        dead_features_resampler = DeadFeatureResampler(sae, None, 200000, 512, 32 * 512)
        model = SparseAutoencoder(sae, cfg['resampling_steps'], cfg['n_resampling_watch_steps'],
                               cfg['l1_coefficient'], reconstruction_loss_metric_zero, reconstruction_loss_metric_mean,
                                  resampler, cfg['lr'],
                               l1_scheduler=linear_growth_scheduler, lr_warmup_steps=cfg['lr_warmup_steps'],)
        return model

    @property
    def W_enc(self):
        return self.sae.encoder_map.weight

    @property
    def b_enc(self):
        return self.sae.encoder_map.bias

    @property
    def W_dec(self):
        return self.sae.decoder_map.weight

    @property
    def b_tied(self):
        return self.sae.tied_bias

    def get_sample_batch(self):
        return torch.tensor([[-3.6842e+00,  1.6504e+00,  6.6481e-01,  7.2910e-01,  1.2670e-01,
         -6.0209e-01, -9.7375e-01, -5.6477e-01,  3.9343e-01,  1.5289e-01,
         -1.2831e+00,  7.4718e-01, -5.4943e-01, -5.7863e-01,  1.2451e+00,
         -2.5088e-01, -1.2443e+00, -7.5351e-02,  8.1207e-01,  1.1770e+00,
         -9.6528e-01, -3.1185e-01, -2.2723e-01,  7.1166e-01, -4.1508e-01,
          4.8359e-01, -6.7627e-01, -7.2323e-01, -2.5363e-01,  3.1083e-01,
          4.2802e-01,  3.3785e-02,  2.3127e-01,  4.5726e-01, -4.6572e-01,
          3.8515e-01, -7.1546e-01,  7.0791e-02,  2.1183e-01,  4.3440e-01,
         -4.9546e-01, -1.0767e-01, -1.9024e-01, -1.3357e-01,  2.0697e-01,
         -1.1346e+00,  2.6457e-01, -1.1832e+00, -2.8216e-01,  5.5418e-01,
          4.9069e-01, -5.2028e-01, -1.8714e-02,  2.6902e-01, -5.1327e-01,
         -6.0968e-02, -6.7377e-02, -7.1706e-01, -1.7837e-01, -4.2335e-01,
         -6.3297e-01,  4.9925e-02,  1.2861e-01, -4.0200e-01, -4.1438e-01,
          2.5555e+00,  5.1809e-01,  1.5476e+00, -2.8915e-01, -1.4096e+00,
          9.7969e-01, -3.5463e-01,  7.6053e-01, -5.5961e-01,  2.9379e-01,
          7.2253e-01, -3.7912e-01, -1.0437e+00,  4.2267e-01, -7.0163e-01,
         -1.7928e+00,  4.4523e-01,  7.9007e-01, -1.4706e+00, -1.2207e+00,
         -2.3950e+00, -6.0348e-01,  1.9190e+00,  2.8845e-01,  1.6438e+00,
         -2.9599e-01,  5.5378e-01,  1.5447e+00,  5.4931e-01, -3.6126e-02,
          1.2355e+00, -6.1118e-01, -3.7777e-02, -5.6321e-02, -6.3583e-02,
         -4.0833e-01,  6.5190e-01,  3.2531e-01, -2.5637e-01, -9.4196e-02,
          2.4446e-01, -1.4560e+00,  8.6766e-01,  4.5803e-01,  1.4863e+00,
         -1.1044e+00,  5.8748e-01,  2.9007e-01,  5.7291e-01,  6.4877e-02,
          7.2746e-01,  3.6636e-01, -6.2487e-01, -1.4542e+00,  5.3628e-01,
         -5.8610e-01,  2.2222e-01, -8.0706e-01, -6.1889e-01, -8.7902e-01,
          1.0114e+00, -7.0029e-01, -3.8942e-01,  2.0853e+00, -1.1090e+00,
          9.5617e-01,  1.2065e+00, -2.9635e-01, -2.8380e-01,  7.9701e-01,
          1.4706e-02, -3.6329e-01, -1.6344e+00,  8.4006e-01, -6.3654e-01,
         -4.4499e-01,  6.8038e-01,  9.6430e-01, -9.6421e-02, -4.7664e-01,
         -1.5315e-01,  4.9143e-01, -8.4820e-01, -3.0160e-01, -2.4897e-01,
          9.8517e-02, -1.1205e+00,  6.2170e-01, -3.2874e-01,  4.7629e-02,
         -5.0634e-01,  1.2766e-02, -1.3663e+00, -4.1107e-01, -1.1753e+00,
          1.6730e-02, -2.0532e-01, -6.8285e-01, -1.0118e+00, -4.7673e-01,
         -2.4450e-01, -2.5689e-01,  3.5553e-01,  8.7515e-01,  9.6406e-01,
          8.5823e-01, -7.8101e-01,  8.6390e-01,  6.8134e-01, -6.1370e-01,
         -1.2185e+00, -4.2786e-01,  2.0332e-01,  4.1085e-02, -4.6447e-01,
          7.0499e-01,  4.5300e-01,  9.8457e-01,  1.8541e-01,  3.8765e-01,
          2.5468e-01,  1.4441e-01, -4.5295e-01, -4.6481e-01,  3.5674e-01,
          7.5477e-01,  7.8366e-01,  2.5928e+00, -8.8858e-01, -4.6196e-01,
          1.0789e+00,  6.6219e-01, -2.3255e-02, -6.3239e-01,  1.2785e-01,
          1.1618e-01, -7.3570e-01,  7.5521e-01, -5.5199e-01, -7.1109e-01,
          1.8298e-01,  4.9197e-01,  4.2701e-01, -3.0771e-01, -5.1250e-01,
         -3.8026e-01, -5.5437e-01,  1.0940e-01, -6.2746e-01,  4.9227e-01,
         -1.8635e-01, -4.3588e-01,  1.3167e-01,  3.0649e-01,  8.4703e-01,
          3.0817e-01,  8.6775e-03,  6.4053e-01,  5.9976e-02,  8.3765e-02,
          7.1318e-02, -3.9682e-01, -1.1313e-01,  3.9527e-01, -2.2763e-01,
          2.7169e-01,  4.4094e-01,  4.3040e-02, -2.6445e-01,  2.9517e-01,
         -1.4998e-01,  4.3639e-01,  2.1928e-01,  4.9793e-01,  1.8140e-01,
          3.5132e-02,  3.4821e-01,  2.0840e-01,  1.6419e-01,  4.7262e-01,
          2.4041e-02,  1.3728e-02,  1.2821e-02, -1.5895e-02, -4.5100e-02,
          7.3893e-01,  5.9011e-01, -1.5386e-01,  1.5304e-01,  2.3264e-01,
          3.3607e-01,  9.7560e-01, -2.4400e+00,  1.0007e+00, -9.3231e-01,
          5.0528e-02, -9.0105e-01, -6.9079e-01, -1.1279e+00, -1.1099e-01,
         -1.7794e-01,  5.7130e-02, -5.5765e-01, -4.0856e-01, -5.9109e-01,
          1.3065e-01,  4.1100e-02, -9.9217e-01,  1.0364e+00,  6.7715e-01,
          7.0033e-01, -9.5873e-01, -6.0720e-01, -4.8523e-02,  8.5469e-01,
          7.5453e-01,  2.4455e-01,  2.8819e-02, -6.8518e-01,  4.7833e-01,
          6.8307e-01,  3.9537e-01,  4.0716e-01, -3.3907e-01, -3.9093e-01,
          8.6027e-01, -1.5913e-01,  5.1139e-01,  8.1357e-01, -1.1483e-01,
          1.1632e-01, -5.9169e-01,  4.2810e-01, -1.8385e-02,  3.7318e-01,
          1.3489e+00, -1.6410e-01, -4.5040e-01,  1.8242e-01, -8.0667e-02,
         -1.1641e-01, -4.0789e-01, -2.2179e-01, -5.6278e-01, -1.3577e-02,
          2.3527e-01, -2.6612e-02, -4.4449e-02,  3.7369e-01,  1.2069e-01,
          6.2342e-01, -5.9541e-01,  3.2225e-01, -1.7088e-01, -5.8698e-01,
          7.2083e-01, -3.7123e-01, -1.7181e-01, -1.7513e-01,  1.2243e-02,
          6.9871e-01, -2.8774e-01,  6.0139e-01,  6.5621e-01,  5.7208e-01,
         -3.0024e-01,  2.0452e-01, -2.1925e-01,  2.2997e-01,  4.6942e-01,
          2.4080e-01,  2.9489e-02,  1.0094e-01, -4.0696e-01,  2.0768e-01,
          4.5820e-01,  9.2221e-01, -5.6753e-01,  2.6562e-01, -6.6248e-01,
          1.7463e-01,  6.4916e-01, -3.1352e-01,  3.3372e-01, -9.4194e-02,
         -3.8338e-01,  2.8071e-01, -3.3419e-01, -4.0260e-01,  1.8318e-01,
         -2.9107e-01, -1.1550e-01,  1.3822e-01, -1.2433e-01,  1.7919e-01,
          3.2925e-01,  7.5442e-04, -1.5023e-01,  7.2964e-02, -3.5875e-01,
         -4.2829e-01,  2.8335e-01,  2.0777e-01, -2.7812e-01,  1.5371e-01,
          2.8272e-02,  1.7684e-01,  2.7502e-01,  3.0702e-01,  3.5062e-01,
          1.8532e-01, -3.3165e-01, -1.2233e-01, -3.8327e-01,  1.0135e-01,
          2.7560e-01,  1.6430e-01,  2.8145e-02,  3.9604e-01,  3.4360e-01,
         -5.7914e-01,  7.2372e-01,  8.0836e-02,  5.5943e-02,  1.0547e+00,
          2.3122e-01,  4.8379e-01,  1.4161e-01,  1.3416e-01,  4.1073e-01,
          1.1199e+00, -3.6424e-01, -9.6091e-01, -2.0525e-01,  3.6649e-01,
          1.8457e-01,  4.2070e-01,  2.9154e-01,  3.5722e-02,  4.0973e-01,
          1.5481e-01,  4.2682e-01, -9.6555e-01, -1.5328e-02, -2.5723e-01,
         -3.8531e-01, -1.7497e-01, -3.3183e-01,  4.3474e-01,  1.3332e-02,
          3.8913e-02,  4.1994e-01, -1.6016e-01,  6.9581e-01,  4.9451e-01,
         -4.8288e-01,  3.9733e-01,  5.2496e-02,  3.2399e-01, -3.4561e-01,
          7.2504e-02,  3.4706e-01, -7.4257e-01,  2.3604e-01,  2.4907e-01,
         -3.6209e-01,  7.1235e-01, -5.0110e-01, -2.9075e-01, -2.5090e-01,
         -8.9618e-02, -5.0392e-01, -3.1739e-01,  4.5546e-02, -1.0485e-01,
         -2.1483e-01, -5.6833e-01, -9.0636e-02, -2.2732e-01, -6.1317e-01,
         -8.0776e-02, -7.4109e-01,  3.2459e-01,  1.1237e-01, -1.0391e+00,
          5.0011e-01,  6.4258e-01, -7.5422e-01, -7.5644e-02, -4.2859e-01,
         -9.3388e-01,  2.8700e-01,  9.6953e-01, -2.6257e-01,  2.1340e-01,
          9.9432e-02,  1.5229e-01, -1.0402e-02,  3.8901e-01,  3.0244e-01,
          2.5177e-01,  1.5237e-01, -1.1654e+00,  7.8765e-01,  1.0573e+00,
         -4.2937e-01, -3.8043e-01,  5.1864e-01,  3.3772e-01, -1.1670e+00,
         -3.7909e-01, -5.8472e-01, -5.5728e-01,  1.8534e-01,  4.6823e-01,
          4.4746e-01,  2.9688e-01,  5.3775e-01, -2.6274e-01,  4.2295e-01,
          4.7396e-01,  9.5077e-02,  3.8384e-01,  4.3603e-01, -2.8753e-01,
          4.4889e-01,  5.3120e-01, -5.6273e-01,  4.8372e-01, -3.8657e-01,
          1.0686e-02, -1.3897e-02,  5.2078e-01,  4.1835e-01, -2.6685e-01,
         -5.5646e-01, -2.3044e-01,  4.6534e-01,  2.1562e-01, -6.0636e-02,
         -2.2293e-01, -8.6154e-02, -5.9386e-01,  8.3982e-01, -6.0692e-02,
          9.2083e-01, -7.3219e-02],
        [-3.1401e+00,  9.3025e-01,  1.1989e+00,  1.0105e+00,  2.4548e+00,
          4.3207e-01,  1.2042e+00,  1.9906e+00,  6.3639e-01, -8.0095e-01,
         -5.7942e-01,  5.1931e-01, -2.0998e+00,  1.2853e+00,  3.0064e-01,
          3.6617e-01, -3.2530e-01, -1.5784e-01,  6.0500e-01, -1.0701e+00,
         -1.2462e+00, -9.3028e-01,  5.7255e-01,  1.4311e+00,  5.2397e-01,
          5.8596e-01, -1.0174e-01,  6.9810e-01,  1.3421e+00, -4.0314e-01,
         -4.4805e-02,  4.0044e-01,  5.6329e-01, -1.2752e+00,  1.6959e-01,
         -3.4966e-01, -3.7882e-01, -3.4232e-01, -1.8566e-01, -1.2182e-01,
          4.0348e-01,  7.2663e-01,  7.1326e-01, -6.5985e-01, -5.0279e-01,
         -4.5237e-01, -7.4861e-01, -5.3155e-01, -1.3909e-01,  7.3552e-01,
          4.4908e-01, -1.2401e+00,  1.2050e-01,  2.3943e-01,  2.3995e-01,
          8.0726e-02, -4.1338e-01, -1.6991e-01,  3.8454e-01, -2.9306e-01,
          6.4444e-02,  2.1837e-01, -1.1815e-01,  3.4916e-02, -6.5220e-02,
          1.2366e+00, -1.3043e+00, -1.0516e+00,  5.6219e-01, -9.0564e-01,
         -4.0554e-02, -1.1622e+00,  6.2510e-01, -2.4053e+00, -1.7169e+00,
          4.4990e-01, -8.7033e-01,  9.4506e-01,  6.0227e-01, -6.3969e-01,
         -1.4570e+00, -1.4160e-01, -1.0459e+00, -1.8492e+00, -1.9409e-01,
          3.8096e-01,  1.7068e-01,  2.4987e+00,  1.0360e-02, -6.9156e-01,
         -2.5386e+00, -3.1777e-01, -5.6244e-01,  9.1638e-01,  3.9632e-01,
         -1.5321e+00,  1.2521e+00,  2.6986e-02, -9.6257e-03, -9.5817e-01,
         -8.1613e-01,  2.2872e+00, -7.0240e-01, -5.8791e-01,  2.7959e-01,
         -1.3776e+00,  3.4441e-01, -3.4910e-01, -2.3694e-01,  1.8078e-01,
         -3.5922e-01,  1.7582e-01, -7.4855e-02,  2.2348e+00,  1.6129e-01,
         -6.2255e-02, -1.8584e-01,  5.6482e-01, -1.5421e+00,  1.2717e+00,
         -2.8798e+00,  1.7103e+00, -5.7780e-01, -7.1180e-01, -2.8341e-01,
          9.4988e-01, -1.1674e+00, -6.0482e-01,  2.6657e+00, -2.9107e+00,
         -7.8342e-02,  1.6103e+00, -6.5327e-02,  1.3821e+00,  8.6709e-01,
          2.0073e-01,  2.8731e-01, -8.7544e-01,  7.0194e-01,  7.2884e-01,
         -5.8239e-01, -2.1347e-01,  8.7684e-01, -7.1909e-01,  2.7618e+00,
          2.3975e+00,  1.0576e+00, -2.2500e+00, -1.0635e+00, -7.1396e-02,
          9.7801e-01, -1.0589e-01,  8.3389e-01,  5.5069e-01,  6.5889e-01,
         -2.8449e-01,  3.3275e-01, -5.2028e-01,  4.2004e-01,  3.2042e-01,
          6.5671e-01, -1.6827e+00, -5.8326e-01,  1.2435e+00, -1.3227e-01,
         -2.8047e-01, -2.7384e-01, -4.2522e-01, -2.0639e-01,  4.1484e-01,
          6.4873e-01, -1.5549e+00,  1.2339e+00, -2.3502e-01, -1.7477e-02,
         -1.2934e+00, -5.4585e-01,  1.0137e+00, -4.4823e-01,  3.2963e-01,
         -6.0101e-01,  2.5214e-01,  1.0650e-01,  3.6033e-01,  5.4325e-01,
          3.2798e-01,  1.9733e-01, -5.2516e-01,  8.6106e-01,  2.7760e-01,
          7.8726e-01,  6.8654e-01,  1.9511e+00, -2.5747e-01, -1.0921e+00,
          5.9919e-01, -3.5028e-01, -8.9573e-01, -1.1061e-01,  1.5994e-01,
         -3.7820e-01, -1.7312e-01,  1.4616e+00, -1.0765e+00, -1.1909e+00,
         -2.5479e-02, -1.4168e-01,  1.7624e-01,  2.2404e-01,  2.4104e-01,
         -1.4995e+00, -3.1454e-01,  6.4087e-01, -1.5154e-02,  6.9893e-01,
          3.8399e-02, -2.4535e-01,  1.3085e+00,  2.9504e-01,  2.3015e-02,
          3.9305e-01, -1.5098e-01,  5.8403e-01, -6.9172e-01, -5.3948e-01,
         -5.8727e-01,  9.2931e-02, -1.9865e-01,  5.8785e-01, -8.9797e-01,
         -1.2247e-01, -2.7724e-02,  1.8891e-01, -4.2599e-01,  3.4892e-01,
          1.7395e-01,  2.2223e-01,  1.8450e-01,  1.0287e-01,  9.9398e-02,
         -2.7829e-01,  2.4495e-01,  8.3281e-02,  6.7408e-01, -1.7878e-01,
         -5.0417e-01, -3.9792e-01,  2.6678e-01, -2.5129e-01,  1.0261e-01,
          7.3777e-01,  5.1450e-01, -2.6949e-01,  2.7691e-01,  3.9396e-02,
          4.2605e-02,  3.6270e-01, -2.1398e+00,  1.9993e+00, -1.1760e+00,
         -2.0633e-01, -1.1895e+00, -3.7477e-01, -1.4304e+00, -9.6543e-02,
         -3.9235e-01,  7.8518e-01, -9.2255e-01,  4.6761e-01,  3.6786e-01,
          6.1398e-01,  1.5643e-01, -1.2028e+00,  1.1717e+00,  1.2015e+00,
          7.0976e-01, -4.3904e-01, -7.1411e-01, -2.6439e-01,  3.7114e-01,
          6.1749e-01, -2.1966e-01,  3.1758e-01, -2.2517e-02,  5.9646e-01,
         -1.1823e-01,  1.5087e-01,  8.7860e-01, -1.2961e+00, -3.6671e-01,
          8.2858e-01, -2.8008e-01,  4.1798e-01,  5.4335e-01,  1.0496e-01,
         -5.7295e-01, -8.5465e-01,  5.2950e-04, -5.1656e-01,  8.3566e-01,
          1.4501e+00, -2.3581e-01, -3.7174e-01,  3.7898e-01, -8.5613e-01,
         -5.1851e-01, -5.8047e-01,  2.0960e-01, -5.1789e-01, -1.0485e-01,
          4.2802e-01, -9.6446e-01,  4.4057e-01,  8.8899e-01, -3.5311e-02,
          1.8827e-01, -6.0778e-01,  1.9278e-01, -6.8319e-01, -1.9063e-01,
          4.6555e-01,  7.7293e-01,  4.8079e-01, -6.8733e-01, -7.7560e-01,
          1.7675e+00,  2.8787e-01,  4.4630e-01, -2.3205e-02, -3.6996e-01,
         -4.1039e-01,  1.2617e-01, -5.5568e-01, -1.6603e-01,  1.0403e-01,
          9.1349e-01, -2.4680e-01, -1.2456e+00,  3.6991e-01,  4.3960e-01,
         -3.5571e-02,  5.3321e-01, -2.2582e-01,  1.0370e+00, -3.7182e-01,
          3.2698e-01,  1.2945e-01, -3.5402e-01,  7.0728e-01, -6.8929e-02,
          1.3560e-01,  2.7327e-03, -6.0699e-01, -7.5553e-01, -7.4959e-01,
          2.2564e-01,  8.3298e-02,  6.2155e-01,  6.5495e-01,  4.0362e-01,
          5.8218e-01, -3.5005e-01, -2.6800e-01,  3.0235e-01, -1.3303e-01,
         -5.7035e-01,  1.4942e-01,  1.5156e-01, -7.8517e-02, -2.7694e-01,
         -2.4624e-01, -4.1168e-01,  4.9588e-01,  1.9645e-01, -2.7307e-01,
         -1.6387e-01, -2.7298e-01,  2.4117e-01, -5.1672e-01,  3.8850e-01,
          4.4301e-01, -5.9727e-02, -1.6325e-02,  3.0571e-01,  3.4549e-02,
         -1.2044e+00,  5.0347e-01, -4.9266e-01, -4.4928e-01,  6.7142e-01,
         -3.3207e-01,  6.4596e-01,  1.2965e-01,  9.2259e-01,  6.2449e-02,
          1.4622e+00, -7.9249e-01, -9.3036e-01, -5.1453e-01,  8.0193e-01,
          1.1124e-01,  6.4959e-01, -1.7526e-01,  1.8554e-01,  3.9236e-01,
          2.4535e-01,  1.0461e-01, -6.8304e-01,  1.0253e-01, -4.1312e-01,
          7.0231e-01, -6.8930e-01, -4.2378e-01,  6.5168e-01, -1.9495e-01,
         -3.9238e-01,  5.3792e-02,  8.5979e-02,  6.4744e-01,  9.0683e-01,
         -2.9029e-01, -6.7904e-02,  2.1929e-01,  9.6849e-02, -3.8161e-02,
          1.0460e-01,  1.3371e-01, -2.7953e-01,  3.0140e-01,  4.7355e-01,
         -1.4878e-01,  3.3138e-01, -6.6490e-01, -6.5015e-01, -4.6894e-01,
          1.1069e-01, -3.5505e-01, -1.4295e-01,  2.5119e-01,  1.3894e-01,
          1.5662e-02, -1.9716e-01, -1.1645e-01, -1.2639e-01, -3.4055e-01,
         -1.1329e-01, -4.4027e-01,  7.0801e-02,  1.0859e+00, -2.6729e-01,
          4.6522e-01,  1.1090e-01, -4.4457e-01, -2.5099e-01, -7.6667e-01,
          5.0607e-01, -3.8523e-02,  1.6885e+00,  4.0498e-01, -4.4188e-01,
          4.0669e-01,  8.3000e-01,  1.3745e+00,  4.5780e-02, -3.5983e-01,
          6.4259e-01, -7.1459e-02, -8.3118e-01,  2.7979e-01,  3.4928e-01,
          4.4880e-01,  2.3180e-01,  7.9256e-01, -5.6701e-02,  8.3293e-01,
         -8.5153e-01, -5.9054e-03, -3.2396e-01, -4.3279e-01,  5.5186e-01,
          1.4552e-01,  1.2092e-01, -1.8319e-01,  7.3438e-01, -2.1740e-01,
          2.4675e-01,  6.1668e-01, -7.6586e-01, -1.9398e-01,  4.6224e-01,
          4.2440e-01, -3.6138e-01,  3.8056e-01, -4.1747e-01,  2.7749e-01,
         -5.4576e-02, -3.2207e-01,  1.3594e-01, -3.5747e-01, -3.7315e-01,
         -2.4382e-01, -2.9855e-01, -2.3139e-01,  8.0459e-02, -3.3503e-01,
          2.4433e-01, -5.9254e-02,  1.4780e-01,  4.3821e-02,  7.0064e-01,
          2.4161e-01, -4.9965e-02],
        [-2.1028e+00,  1.2055e+00,  1.2432e+00,  9.1809e-01, -1.0245e-01,
         -2.0701e+00, -7.4958e-01, -5.8839e-01,  4.2067e-01, -9.0608e-02,
         -5.8561e-01, -2.5994e-01, -4.1241e-01, -4.9012e-01,  5.5229e-01,
          1.9195e-02, -1.4314e-01, -5.4466e-01,  7.0166e-01,  6.7821e-01,
         -4.9865e-01, -8.4407e-01,  1.8763e-01,  2.7133e-01,  2.3232e-01,
         -1.1779e-01, -2.8288e-01, -3.1901e-03, -5.3892e-01,  4.8274e-01,
          6.3632e-02, -6.2960e-02,  7.3400e-01, -9.1377e-02, -1.2311e-01,
          2.8750e-01, -3.1556e-01, -4.0316e-01,  8.5013e-02,  2.7615e-01,
          1.0731e+00,  9.2338e-01,  5.6792e-01,  3.3010e-01,  7.7554e-02,
          5.1853e-02, -2.5956e-01, -2.5931e-01,  2.2894e-01,  5.3913e-01,
         -3.4544e-01, -5.8523e-01,  8.7725e-01,  1.3561e-01,  3.2217e-01,
         -1.8430e-01,  1.7939e-02,  9.2360e-02,  3.1607e-02, -1.7750e-01,
          6.3819e-01, -7.7734e-02,  3.1839e-01,  5.0077e-01,  1.9490e+00,
         -5.0918e-01, -1.0156e+00, -3.1459e+00, -1.2712e-02, -2.5912e-01,
         -7.3530e-02, -6.6086e-01,  1.1722e+00, -7.5980e-01, -8.1891e-01,
          9.5436e-02, -5.7736e-01, -6.0723e-01,  6.3867e-01, -5.7715e-01,
         -1.7680e-01,  7.4705e-01,  1.0697e+00, -6.5064e-01, -6.6862e-01,
         -8.1807e-01,  2.2564e+00,  2.6829e+00, -8.0874e-01, -6.9359e-01,
          9.5415e-01,  1.2700e+00,  1.5853e+00,  9.8435e-01, -8.1352e-01,
         -4.4845e-01, -6.4637e-01, -2.9679e-01,  4.7079e-01, -4.6510e-01,
          2.0171e+00,  4.5761e-01, -1.0381e+00, -1.8328e-01, -1.3727e+00,
         -1.1039e+00, -8.5634e-01,  2.1246e+00,  2.5063e+00,  1.0037e+00,
          8.4925e-01, -2.7432e-01, -6.2767e-01,  4.5148e-01,  4.7593e-01,
          6.8472e-01, -1.5337e+00, -4.8006e-01, -1.5821e+00,  8.7244e-01,
         -7.3974e-01, -4.5807e-01,  2.7603e-01,  7.5089e-01, -1.2700e+00,
          4.4082e-02, -1.5555e+00, -7.8169e-01,  1.5486e+00, -1.5485e-01,
         -1.0198e+00, -7.7831e-01,  9.5008e-02,  4.8664e-01,  4.9559e-01,
         -7.3917e-01,  8.1597e-01,  7.7054e-01, -3.9354e-01,  5.1346e-01,
         -3.4194e-01,  2.0070e-01, -1.8550e-01,  7.4010e-01,  1.9117e-01,
          4.4663e-01,  6.0783e-01,  1.5420e+00,  3.0128e-01, -9.3974e-02,
          9.9311e-01, -1.0801e-01, -2.4944e-01,  4.4344e-01, -1.3020e-02,
         -5.2158e-01,  1.0152e+00, -3.8034e-01, -2.2562e-02, -7.2389e-01,
          1.4974e-01,  8.0955e-01,  3.4686e-01,  7.3117e-02, -7.8895e-02,
          4.8031e-01, -4.6714e-01,  4.2812e-01,  8.2922e-01,  5.6707e-01,
          5.3025e-01, -2.4801e-01,  2.9971e-02,  8.2631e-02, -2.9331e-01,
         -8.9643e-01, -5.9917e-01,  6.9339e-01,  8.8572e-01,  3.9295e-02,
         -1.9272e-01, -5.1737e-01,  3.0957e-01,  7.4958e-01,  8.5717e-01,
         -5.6393e-01,  5.2647e-01, -1.0304e-02, -2.0119e-01, -7.4328e-01,
          6.0773e-01,  2.9250e-01,  1.3674e+00, -5.5967e-01, -3.9957e-01,
          1.3933e+00,  1.1440e-01,  3.4377e-01, -3.4901e-01,  4.6545e-01,
          2.6600e-01,  1.9005e+00, -5.2363e-01, -8.8792e-01, -1.6383e+00,
          8.3218e-03,  7.7249e-02,  3.8243e-01, -6.1901e-01, -6.0077e-01,
          3.8465e-01, -2.0739e-01,  3.1101e-01, -2.9368e-01,  1.3299e+00,
         -2.0397e-01,  3.8594e-01,  5.0174e-01,  2.2879e-01,  2.8662e-01,
         -3.5866e-01,  1.4146e-01,  5.7096e-01, -2.5673e-02, -2.3806e-01,
         -4.2691e-01, -4.5692e-01,  4.4099e-01, -4.4889e-01, -1.2423e-01,
         -6.4810e-01,  7.6116e-01, -3.9591e-01, -5.2431e-01,  3.4859e-01,
          2.2479e-02,  7.0237e-01, -4.2704e-01,  6.7958e-01, -5.3795e-02,
         -2.6535e-01,  6.1015e-01, -3.4238e-01, -1.0289e-01,  1.0791e+00,
          2.5492e-02, -7.6115e-03, -4.8945e-01,  2.3310e-01, -7.3198e-02,
          1.3010e-01,  4.2479e-01, -2.5159e-01,  9.2290e-02,  3.1343e-01,
          2.4139e-01,  8.5559e-01, -2.1230e+00,  8.4647e-01, -4.8706e-01,
         -3.0154e-01, -4.2503e-01, -4.9377e-01, -7.0635e-01, -6.2343e-01,
         -6.7457e-01,  1.5536e-01, -2.9056e-01,  1.1599e-02, -6.1946e-01,
         -3.8189e-01,  1.9197e-01, -9.7441e-01,  6.7608e-01,  7.7126e-01,
          3.6444e-01, -1.0009e+00, -2.6270e-01, -2.4275e-01,  8.4005e-01,
          8.2896e-01,  3.4596e-02,  6.1434e-02, -1.8940e-01,  6.8029e-01,
          7.5539e-01,  5.3016e-01,  6.2903e-01, -7.2612e-01, -3.7260e-02,
          1.1400e+00, -5.6197e-02,  2.9240e-01,  5.4620e-01, -3.8860e-01,
          1.1227e-02, -5.3096e-02,  3.5962e-01, -2.1723e-01,  3.3773e-01,
          1.2281e+00, -2.0694e-01, -6.5236e-01,  1.2094e-01, -3.7387e-01,
         -2.5881e-01, -3.5737e-01,  9.6301e-02, -9.9370e-01,  3.1227e-01,
         -2.3702e-01,  9.7763e-02, -3.9271e-01, -3.9526e-02, -1.1032e-01,
          6.9516e-01, -5.4586e-01, -1.9932e-01,  3.0405e-01, -7.4445e-01,
         -7.2525e-01, -4.5131e-01,  2.1242e-02, -3.8411e-01, -1.6069e-01,
          2.9785e-01,  1.1554e-01,  5.5145e-01, -2.0185e-01,  2.5956e-01,
         -4.7860e-01,  3.9506e-01, -2.6602e-01,  2.8769e-01,  4.3069e-01,
          3.7771e-01,  2.1457e-01,  1.4904e-01, -5.9835e-01,  1.1970e-01,
         -1.3329e-01,  5.7048e-01, -1.4608e-01,  9.2360e-02, -1.7960e-01,
         -2.0626e-01,  8.2784e-01, -4.1048e-01,  2.4886e-01,  3.7672e-02,
         -6.0172e-02, -3.0089e-02, -1.4923e-01, -1.8632e-01,  7.0253e-02,
          2.9044e-01,  1.8673e-01, -5.0518e-02, -5.1403e-02,  5.6772e-02,
          5.3239e-03, -3.7332e-02,  2.2752e-01,  2.3279e-01, -3.6319e-01,
         -2.7343e-01,  1.3342e-01,  3.8511e-01, -2.4561e-01,  8.9535e-03,
          1.1219e-01,  2.4762e-02,  3.6398e-02,  2.7314e-01, -3.4501e-01,
          1.5510e-01, -1.1481e-01,  1.4651e-01, -1.0485e-01,  1.4388e-01,
          5.0613e-01,  1.4942e-01,  5.2135e-01,  6.3326e-01,  2.2422e-01,
         -7.1743e-01,  6.9142e-01, -3.6850e-02, -5.8153e-01,  8.0472e-01,
         -3.6804e-01,  4.1909e-01,  2.1019e-01,  8.1160e-01,  2.1378e-01,
          1.3476e+00, -3.0778e-01, -8.6208e-01, -5.7360e-01,  7.2226e-01,
         -2.0595e-02,  2.2681e-01,  3.2551e-01,  5.8102e-04,  2.0310e-01,
         -1.4310e-01,  3.6872e-01, -4.1220e-01,  4.0599e-03, -3.3550e-01,
         -1.9276e-01, -4.5846e-01, -2.9195e-01,  4.7329e-01, -3.4481e-01,
         -8.1415e-02,  3.2122e-01, -8.8440e-02,  1.7684e-01,  5.2622e-01,
         -4.2892e-01, -1.1601e-01,  8.5213e-02,  2.2032e-01, -1.4212e-01,
          2.5185e-02, -4.1244e-02, -5.0331e-01,  2.3136e-01,  3.8196e-01,
         -6.2658e-02,  6.0428e-01, -6.2843e-01, -2.0177e-01, -2.6083e-01,
         -1.6428e-01, -1.2947e-01, -1.2096e-01, -2.7124e-02, -1.1578e-01,
         -3.3427e-01, -6.2123e-01,  2.5442e-02,  8.1131e-02, -1.2254e-01,
         -6.7007e-02, -4.2018e-01,  1.0240e-02,  3.8138e-01, -6.2206e-02,
          5.9441e-01, -4.4265e-01,  2.8313e-01, -9.9112e-01, -9.3442e-01,
          2.9363e-02,  1.1432e+00,  8.7677e-01, -1.3876e-02,  3.0772e-01,
         -1.8284e-01,  6.3745e-02,  3.5305e-01, -8.7685e-01, -2.1217e-01,
          2.7851e-01,  1.6080e-01, -7.4665e-01, -5.2301e-01,  2.4849e-01,
          1.0892e-01,  4.1748e-01, -2.6325e-01,  4.6589e-01, -7.6059e-01,
         -1.7287e-01, -1.2951e-01, -2.1257e-01, -2.0039e-01,  2.5009e-01,
          6.0657e-01, -3.4464e-01,  5.4876e-01,  1.3567e-01, -3.6210e-01,
         -7.5373e-02, -2.5432e-01, -2.5813e-01, -8.4796e-01,  9.6791e-02,
          4.9270e-01,  3.4457e-01,  2.8051e-02, -5.6248e-01,  1.7209e-01,
         -2.1869e-01,  1.6495e-01, -4.3999e-01,  1.6966e-01, -2.8450e-01,
         -2.4476e-01, -3.4460e-01,  3.6323e-01,  1.8905e-01,  5.6989e-02,
          1.7106e-01,  1.2015e-01, -2.9110e-01,  3.2105e-01,  2.4022e-01,
          3.7964e-01,  2.0327e-01],
        [-1.6203e+00,  1.1691e+00,  1.7440e-01, -4.6606e-01,  4.1388e-01,
          4.8887e-02, -1.4000e+00, -8.3369e-01,  1.1757e+00, -1.4949e+00,
         -9.7466e-01, -1.6317e-01,  5.0809e-02,  9.1971e-01,  1.8794e-01,
          4.2550e-01, -1.2530e+00,  5.6996e-01,  5.3545e-01,  4.3292e-02,
         -2.4766e-01, -9.2507e-01,  2.0199e-01, -5.2349e-01,  8.1057e-01,
         -1.9984e-01,  4.5959e-01,  5.3273e-01, -4.1859e-01, -4.7003e-01,
          1.9033e-02, -7.1174e-01,  2.0407e-01, -4.2295e-01,  1.1857e+00,
          3.5833e-02,  4.8571e-01, -1.0275e+00,  1.3370e-01, -2.3957e-01,
          1.0048e+00, -1.0493e-01,  1.8902e-01,  1.5901e-01, -3.8761e-01,
          3.0433e-01, -2.4884e-01,  5.4221e-02,  4.5146e-01,  9.9936e-01,
          4.6615e-01, -5.6375e-01,  6.5727e-01,  2.5177e-01,  5.4317e-01,
          2.4842e-01, -1.2104e-01, -4.8064e-01, -2.7920e-01,  1.3399e-01,
         -2.9721e-01,  6.3230e-01,  8.1745e-01,  1.0368e+00,  1.7955e-01,
          1.1019e+00, -1.5790e+00, -1.3932e-01,  7.7931e-01, -1.0351e+00,
         -1.3723e-01, -1.5562e+00,  1.2304e-01, -1.8587e+00,  7.1294e-01,
          7.0539e-01, -1.7665e+00, -7.6349e-01,  8.9443e-01, -2.6308e-01,
         -1.6351e+00,  3.1337e-01,  1.1073e+00, -1.7086e+00, -9.9738e-01,
         -1.2790e+00,  2.8431e-01,  2.5363e+00,  3.9400e-02,  4.3415e-01,
         -2.6336e-01,  8.5703e-01,  2.8328e+00,  1.4520e+00,  2.6063e-01,
         -3.6873e-01,  1.1227e-01,  1.0402e-01, -7.9770e-01, -8.5464e-03,
          8.2068e-01,  8.5638e-01,  1.1368e-01,  5.5619e-01, -3.7760e-01,
          2.7127e-02, -1.0771e+00,  8.7779e-01,  4.0700e-01,  1.2968e+00,
         -2.0159e-01, -7.4582e-01, -3.4234e-01,  2.1886e-01,  4.6190e-01,
          2.1070e-01, -1.5715e-01,  6.0391e-01, -8.7454e-01,  1.3520e+00,
         -2.0456e-01,  7.5015e-01,  1.3699e-01,  4.7314e-01, -1.2203e+00,
          1.6243e+00, -2.7979e-01, -3.8023e-01,  2.6386e+00,  1.8005e+00,
          4.5726e-01, -1.6992e-01, -6.7748e-01,  7.5925e-01, -1.2039e+00,
         -1.1407e+00,  5.8384e-01,  5.0585e-01, -1.2551e-02, -9.1635e-01,
          1.1428e-01, -1.9713e-01, -4.2224e-01,  7.7295e-01, -8.2226e-01,
         -3.5101e-01,  1.3149e-01, -1.2457e+00,  9.2106e-01,  5.7403e-01,
          2.9232e-01, -1.4407e+00,  3.4305e-01, -5.8893e-01,  1.1596e+00,
          2.1056e-01, -5.6673e-01,  4.3908e-01, -3.1391e-01, -2.3758e-01,
          7.1120e-01,  4.9287e-01,  8.5394e-01, -8.6608e-01,  7.6590e-01,
          1.3977e+00,  1.5858e-01, -1.1927e-01,  4.4806e-01,  1.2609e+00,
          2.4863e-01, -4.6399e-02,  1.7840e-01, -5.9038e-02,  1.3786e-01,
         -1.5661e+00, -6.0455e-03,  2.6346e-01,  3.9271e-01, -9.1810e-01,
         -8.5223e-01,  4.3888e-01,  6.4622e-01,  1.2349e+00, -5.8581e-02,
          5.1304e-02,  1.2850e-01, -4.1115e-01,  3.3319e-01,  8.5566e-01,
         -6.4833e-02,  4.1930e-01,  1.9695e+00, -4.7070e-01, -3.8045e+00,
          5.4509e+00, -7.7949e-01,  1.3205e+00,  9.8145e-02,  9.7087e-01,
          7.4739e-01, -1.4330e-02,  1.7656e+00, -1.2675e+00,  7.1469e-01,
          1.1374e+00,  4.9070e-01, -6.3532e-01,  1.5676e-01, -1.4364e+00,
         -1.5827e-01, -1.0762e+00, -7.4413e-01, -1.3963e+00,  1.3906e+00,
         -2.9789e-01,  1.5777e-01, -7.6177e-01,  2.9505e-01,  5.5828e-01,
         -4.3341e-01,  8.7156e-01, -6.5183e-01,  5.4265e-02,  9.2048e-02,
         -6.4671e-01, -6.7997e-01, -1.1095e+00,  7.9107e-01,  2.9817e-01,
          8.7213e-01,  1.0050e+00, -2.8472e-01, -2.2460e-01,  3.6242e-01,
         -7.0376e-01,  2.5359e-01,  2.4821e-01,  4.2230e-01,  1.1986e-01,
         -8.8489e-01,  6.4929e-01, -5.2141e-01,  3.1507e-01, -9.2762e-02,
          8.7389e-02, -1.0485e-01,  5.4519e-02,  4.1443e-01, -3.9310e-01,
          3.3504e-01,  2.2719e-01,  1.3499e-01,  6.4558e-01,  7.5819e-01,
         -1.1232e-01,  8.1840e-01, -2.2598e+00,  9.6628e-01, -5.6890e-01,
         -1.8748e-01, -7.9796e-01, -6.4337e-01, -1.1272e+00, -2.7754e-01,
         -4.5132e-01, -2.5060e-02, -4.9090e-01, -4.2925e-02, -5.2728e-01,
          7.0757e-02, -8.4442e-02, -1.0769e+00,  9.7469e-01,  6.2862e-01,
          5.6994e-01, -7.5884e-01, -2.7897e-01, -1.1510e-01,  6.5063e-01,
          6.5813e-01,  2.5825e-01,  4.0941e-01, -4.3836e-01,  2.7724e-01,
          5.2562e-01,  5.2881e-01,  3.8390e-01, -4.7547e-01, -2.3971e-01,
          9.7417e-01,  3.8369e-02,  4.3660e-01,  8.0743e-01, -2.2797e-01,
         -3.4182e-03, -3.2734e-01,  1.2929e-01, -2.3347e-01,  4.8141e-01,
          8.1198e-01, -2.4334e-01, -5.9807e-01,  1.3141e-01, -2.4568e-01,
         -2.7034e-01, -4.4296e-01,  5.2081e-02, -5.3733e-01,  1.7850e-03,
          1.4911e-01,  2.0724e-01, -2.5933e-01,  2.2887e-01, -5.7428e-02,
          8.5156e-01, -8.5695e-01, -2.2198e-02,  3.0238e-01, -7.1073e-01,
         -9.9727e-01,  1.0137e-01, -6.0651e-01, -1.0423e+00,  2.1707e-01,
          2.7062e-01, -3.7025e-02,  3.1844e-01,  6.3142e-02,  3.7655e-01,
         -7.1222e-01, -1.0178e-01, -2.2288e-01,  8.0277e-02,  3.4770e-01,
          3.1872e-01,  9.1474e-02, -1.3231e-02,  1.4720e-02,  1.2062e-01,
         -8.5015e-02,  6.9865e-01, -4.1506e-01,  8.1488e-02, -5.0013e-01,
         -1.0132e-01,  7.6644e-01, -1.8256e-01,  1.7586e-01, -7.4063e-02,
          9.6111e-03,  3.2043e-01, -1.4593e-01, -8.8388e-01, -2.9029e-01,
          3.3683e-02, -1.9560e-01, -3.3301e-01,  3.9311e-02,  2.5255e-01,
          2.8370e-01,  4.0205e-01,  3.1597e-01,  3.4017e-01, -3.8569e-01,
         -5.6493e-02,  1.2525e-01,  5.6510e-01,  2.2081e-01,  7.1553e-02,
         -4.0485e-03, -1.0020e-01,  4.1271e-01,  2.6033e-01, -8.9677e-02,
         -5.9411e-02,  1.6226e-01,  8.1562e-02, -1.3513e-01, -1.5975e-01,
          5.2694e-01,  1.9657e-01,  4.5156e-01,  6.1392e-01,  7.8960e-02,
         -7.6772e-01,  7.0399e-01, -1.3781e-01, -3.7060e-01,  9.7103e-01,
         -1.8071e-01,  4.5844e-01,  1.3508e-01,  5.3157e-01,  3.1630e-01,
          1.4294e+00, -3.3152e-01, -8.2279e-01, -4.3904e-01,  6.0897e-01,
          2.9531e-02,  8.2079e-02,  3.7549e-01,  3.2897e-02,  5.3849e-02,
         -1.5761e-01,  2.9346e-01, -5.0669e-01, -5.0936e-02, -4.2261e-01,
         -1.5009e-01, -2.5737e-01, -2.7746e-01,  2.8348e-01, -3.4887e-01,
         -3.8298e-03,  4.2995e-01, -1.7601e-01,  2.3333e-01,  5.5939e-01,
         -4.1374e-01,  1.2071e-01,  9.7317e-02,  2.7154e-01, -1.5374e-01,
          1.0800e-01,  1.0804e-01, -5.2478e-01,  1.3158e-01,  3.3220e-01,
         -3.3721e-02,  4.5072e-01, -4.7711e-01, -2.3919e-01, -2.5304e-01,
         -3.9813e-02, -1.5882e-01, -8.8680e-02, -1.0098e-01, -9.6112e-02,
         -3.9826e-01, -4.7524e-01, -2.0885e-03, -6.5119e-02, -1.3212e-02,
         -1.5183e-01, -4.1686e-01,  2.9624e-02, -1.7626e+00,  1.4938e-01,
         -9.8616e-01, -2.4614e+00, -1.9879e+00,  3.7806e-01, -6.3171e-01,
         -9.0164e-01,  1.3202e+00,  4.8455e-01, -1.1425e+00,  6.4536e-01,
          1.0831e-01, -3.0030e-01, -1.0449e-01, -5.4159e-01,  2.3357e-01,
         -5.5086e-01,  1.1635e+00, -6.0735e-01, -4.5749e-01, -1.7944e-01,
          9.6536e-01,  5.2791e-01,  9.0155e-01,  1.2760e+00,  1.5397e-01,
         -6.5864e-01,  4.2182e-01, -2.6731e-01, -1.0652e-01, -7.5943e-01,
          1.3125e+00, -8.9533e-03,  1.7607e-01,  1.0838e+00, -7.6004e-01,
         -5.8116e-01, -3.2145e-01, -3.8859e-01, -4.7878e-01,  2.1348e-01,
          3.2421e-01, -3.8692e-01,  4.1120e-01, -2.5013e-01, -2.2084e-01,
         -4.5332e-01,  1.1489e-01,  5.7391e-01,  6.2011e-01,  5.7359e-01,
         -6.0547e-02,  1.5313e-01,  7.9528e-01,  3.5892e-01, -7.9083e-02,
          3.4684e-01, -8.5839e-02, -4.2132e-01, -1.9095e-01, -8.7209e-01,
          1.0517e+00, -6.2351e-02],
        [-1.8174e+00,  9.4084e-01,  1.0612e+00,  1.2236e+00,  2.1553e-01,
         -6.2545e-03, -2.1116e-01, -7.5613e-02,  2.0227e-01,  1.5206e-01,
         -1.8699e-01, -4.2785e-01, -2.6371e-01,  8.0090e-01,  9.8849e-01,
         -8.2795e-01, -5.3032e-02, -7.1491e-01,  7.6812e-01,  1.2289e-02,
         -9.7356e-01, -1.1320e-01, -6.9164e-01,  1.1442e-01, -1.4755e-01,
         -4.4142e-01,  7.1229e-02, -1.2962e-01,  7.1626e-01,  1.1010e-01,
          9.6365e-01,  1.7708e-01,  1.2958e-01, -1.8684e-01, -1.1600e-01,
         -3.9327e-01,  7.1745e-02, -5.8332e-01,  7.2885e-01, -1.7062e-01,
          2.6615e-01, -1.0037e-01,  4.8555e-01, -1.2941e-01, -2.3111e-01,
         -2.4663e-01,  2.0454e-01, -2.8315e-01, -2.2496e-01,  5.6385e-01,
          4.7898e-01, -4.2878e-01,  5.9823e-01,  3.0373e-01,  1.0180e-01,
          1.1077e-01, -3.9017e-01, -5.7526e-02,  2.0473e-01,  3.4757e-01,
         -8.0319e-02,  4.6569e-01,  1.5425e-01,  3.1500e-01, -1.0492e+00,
         -9.0762e-01, -5.9929e-01, -1.2349e+00,  1.3713e+00,  8.0154e-01,
          8.3966e-01, -1.9226e+00, -2.9745e+00, -7.6439e-01, -1.6138e+00,
         -1.8419e-01, -1.6393e+00, -1.9634e-01,  3.0963e+00, -1.9652e+00,
         -1.2504e+00,  8.9333e-01,  1.3231e+00,  1.1649e+00, -1.1808e+00,
          2.5689e+00,  1.3651e+00, -5.9063e-02,  7.8945e-01,  1.5287e+00,
          4.4505e-01,  1.6733e+00,  2.7338e+00,  1.6605e+00, -5.5291e-01,
          2.3507e+00,  2.7914e+00,  9.6107e-01, -1.3966e+00, -7.2263e-01,
          5.1330e-01,  7.0868e-01,  1.6185e+00,  1.4585e+00,  2.0961e-01,
         -3.4949e+00, -3.4993e+00, -5.5376e-02, -4.1306e-01, -1.9651e-01,
         -3.3679e-01,  3.1455e-01,  6.6198e-01,  1.5700e+00,  4.5660e-01,
         -9.3353e-02, -1.1138e+00,  7.5520e-01,  1.9198e-01, -5.1739e-02,
         -7.9312e-01,  1.7330e+00, -1.6951e+00, -1.2393e+00, -1.7245e+00,
          1.1026e-01, -3.7705e-01, -3.7470e-01,  3.1492e-01, -7.5266e-01,
         -8.8110e-01,  8.7283e-01, -5.0612e-01, -3.5774e-02,  1.1952e+00,
         -9.0799e-02,  2.2506e-01, -2.0366e-02,  1.7352e-01,  1.0555e+00,
         -4.6293e-01,  6.3443e-01, -3.6048e-01,  7.8328e-01, -1.4230e-02,
          1.4544e+00, -1.3327e-01,  1.4483e-01,  8.9812e-01, -3.1661e-01,
         -5.0529e-01,  4.6679e-01, -8.4543e-01, -6.0222e-01,  7.9449e-01,
         -4.8484e-01, -2.7365e-01,  5.1745e-01, -5.3143e-01, -3.5413e-01,
          1.0282e+00,  3.1734e-01,  1.1706e+00,  5.2485e-01,  1.0503e-01,
          3.6655e-02,  5.7385e-02,  3.4492e-01,  1.1297e+00,  6.0457e-01,
          6.8686e-01,  1.8501e-01,  8.7915e-02, -2.1315e-01,  4.1472e-01,
         -3.5811e-01,  3.9241e-01, -1.0711e-01,  1.2317e+00, -4.4963e-03,
         -2.1031e-01, -5.0567e-01,  1.0781e+00, -1.1878e-01,  3.4357e-01,
         -5.1704e-01,  6.0301e-02, -1.7621e-01, -1.1621e+00, -9.4392e-02,
          4.1225e-01,  1.3208e-01,  2.4823e+00, -1.8058e+00, -6.4912e-01,
          7.5604e-01, -3.8983e-01,  6.2778e-01, -7.6319e-01,  7.6212e-01,
          7.2331e-02, -1.0200e+00, -1.5731e-01, -2.3500e-01, -8.4979e-01,
         -2.1930e-01,  1.0268e+00,  4.2702e-01, -1.8309e-03, -4.6473e-01,
         -9.4382e-01, -5.1556e-01,  1.4273e-01, -3.6735e-01,  1.2555e+00,
          2.0237e-01, -6.3214e-01,  2.1959e-01,  5.9208e-02,  5.4821e-01,
         -1.9259e-01, -4.1857e-01,  1.0338e-01, -3.9787e-01,  2.2293e-01,
          1.2344e-01, -2.3896e-01, -7.9745e-01,  5.6725e-01, -6.4301e-02,
          5.2298e-01,  5.4002e-01,  3.5141e-01, -4.3115e-01, -1.5896e-01,
          1.0910e-01,  1.7579e-01,  4.9088e-01,  3.5013e-01,  2.6730e-01,
          3.2706e-02,  1.9557e-01,  9.0730e-03,  4.9423e-01,  6.3337e-01,
         -4.2042e-01,  8.3362e-02, -1.2959e-01, -1.9463e-01,  6.1734e-02,
          8.3646e-01,  5.8210e-01, -1.9135e-02,  2.3623e-01,  3.2021e-01,
          3.6393e-01,  1.6997e+00, -2.3710e+00,  1.3297e+00, -1.4941e+00,
         -9.9932e-02, -7.2317e-01, -9.3651e-01, -1.5591e+00,  3.9164e-01,
         -1.0697e+00,  6.9658e-01, -5.9846e-01, -4.8287e-01,  1.7676e-01,
          1.3665e-01,  1.9935e-01, -1.3892e+00,  1.0660e+00,  1.0402e+00,
          5.4063e-01, -1.1343e+00, -8.9161e-01, -1.6205e-02,  4.7126e-01,
          9.3938e-01, -1.4597e-01,  6.2130e-01, -4.0052e-01, -5.8033e-02,
          5.7607e-01,  8.9571e-01,  1.3804e-01, -9.8715e-01, -5.8806e-01,
          5.4175e-01, -3.3111e-01,  3.8551e-01,  1.0503e+00, -3.2298e-01,
         -8.1326e-02,  6.2614e-02, -9.5849e-02,  2.5104e-02,  1.8677e-01,
          1.0547e+00, -6.0028e-02, -1.3291e+00,  4.1240e-01, -1.8134e-01,
          1.9263e-02, -2.5272e-01, -1.8668e-02, -7.5421e-01, -4.3325e-01,
          4.7801e-01, -5.2189e-01,  1.4169e-02,  1.2928e-01, -2.0123e-01,
          4.1012e-01, -4.8048e-01,  8.0615e-01, -9.8584e-01, -8.0440e-01,
         -4.3140e-01, -1.5698e-01, -4.6905e-01, -6.8173e-01, -4.7019e-01,
          2.4969e-01,  1.2086e-02,  2.1927e-01,  5.4937e-02,  2.9035e-01,
         -2.3759e-01,  1.8272e-01, -3.1164e-01,  3.0399e-01,  4.6738e-01,
          1.3521e-01,  1.9624e-01, -1.4101e-01, -4.0208e-01, -1.6341e-01,
         -5.3381e-01,  5.9243e-01, -4.7907e-01,  1.1626e-01, -3.1405e-01,
          2.4567e-01,  2.4332e-01, -3.9089e-01,  4.3206e-01,  2.6561e-01,
          1.2844e-01, -2.8165e-01, -3.1106e-01, -5.0127e-01,  6.2189e-02,
          3.0676e-02,  7.0129e-02, -1.3845e-01,  5.8588e-01,  5.9352e-01,
          5.4821e-01,  1.7631e-02, -1.7895e-02,  4.3160e-01, -1.6147e-01,
         -2.6925e-01,  4.6714e-01,  5.5040e-01, -2.0612e-01,  1.8680e-01,
         -2.6009e-01, -6.1700e-01, -2.7883e-01,  2.9848e-01, -2.6478e-01,
         -8.4435e-02, -2.9117e-01,  1.2424e-01, -1.8392e-01,  6.3323e-02,
          3.8064e-01, -1.2174e-01,  2.9480e-01,  7.3717e-01,  6.3317e-01,
         -7.6931e-01,  3.4344e-01,  2.6025e-01, -7.4790e-01,  9.8138e-01,
          2.0501e-01,  1.0352e+00, -4.0003e-01,  1.0914e+00,  8.8436e-01,
          9.4772e-01,  2.7103e-01, -1.4090e+00, -1.7101e+00,  4.3272e-01,
          7.4855e-01, -1.7408e-02, -3.8915e-01,  9.7620e-01,  8.4766e-01,
          3.7067e-01,  3.0879e-02, -1.2949e+00,  3.3864e-01, -8.0354e-01,
         -2.8954e-01, -2.7936e-01, -1.2371e+00,  9.1971e-01, -3.7067e-01,
         -1.0401e-01,  1.0969e-01, -3.2288e-02,  4.2909e-01,  6.6764e-01,
         -4.7751e-01,  1.3456e-01,  4.5031e-01,  9.0884e-01,  4.4797e-01,
         -4.4946e-01,  7.1386e-01, -2.8222e-01,  1.2423e-01,  2.4398e-01,
         -2.6781e-01, -2.5053e-01, -8.6740e-01, -1.9112e-01, -6.2197e-01,
         -2.2031e-01,  1.8247e-01, -2.4988e-01,  8.4927e-02, -5.7891e-01,
          4.4418e-01, -4.6299e-01, -7.2740e-01, -1.6807e-01,  3.0884e-02,
         -8.7543e-02, -1.1422e+00,  2.8335e-01, -3.2175e-01,  1.7570e+00,
          1.2943e+00,  1.2433e-01, -1.4244e-01, -1.1487e+00,  4.0356e-01,
         -8.4450e-01, -1.6653e-01, -8.8180e-02, -1.0810e+00,  9.1103e-01,
          9.7461e-01, -2.5968e-01,  9.7445e-01, -7.4094e-01,  1.1696e+00,
          1.1735e+00, -1.0893e+00, -2.9340e-01, -8.5286e-02,  5.8043e-01,
         -1.9179e-01, -8.1769e-01, -6.0063e-01,  4.1377e-01,  1.8724e-01,
         -1.3924e+00,  1.9668e-01, -3.2150e-01, -1.2890e-01,  4.1533e-01,
          7.4808e-01, -6.1993e-01, -1.4799e-01,  9.9401e-01, -3.3948e-01,
          2.3874e-01, -4.4218e-02,  3.2575e-02, -5.8921e-01, -1.4984e-01,
          1.8891e-01,  4.9840e-02,  3.5081e-01, -7.6211e-01,  7.0480e-01,
          1.4998e-01, -9.4978e-02,  1.6743e-01, -1.7209e-01,  1.1074e-01,
         -1.6603e-01, -9.6960e-02, -7.1100e-01, -5.7041e-01,  2.7597e-01,
          1.8871e-01, -6.8599e-02, -7.3092e-01, -1.7019e-01, -3.8852e-02,
          1.4603e-01, -4.9692e-02]], device='cuda:0')
